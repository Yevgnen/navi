% shell

# List all directories excluding . and ..
ls -d */ .[^.]*/

# Install nix
curl -L https://nixos.org/nix/install | sh

# Install emacs-mac
brew install emacs-mac --HEAD --with-rsvg --with-natural-title-bar --with-starter --with-mac-metal --with-glib --with-imagemagick

# Start all elastic services
for service in elasticsearch-full metricbeat-full filebeat-full kibana-full; do brew services start ${service}; done; brew services ;

# Stop all elastic services
for service in elasticsearch-full metricbeat-full filebeat-full kibana-full; do brew services stop ${service}; done; brew services ;

# Install Shadowsocks
bash <(curl -s -L https://git.io/ss.sh)

# Show directory size in descending order
tree --du -h -L 1 --sort=size
# find . -mindepth 1 -maxdepth 1 -print0 | xargs -0 du -sh | sort -hr

# Delete match line using sed
find . -name '<file_pattern>' | xargs sed -i '/<pattern>/d'

# Replace content by rg and sed
rg <query> --files-with-matches -0 | xargs -0 sed -i 's/<query>/<replace>/g'

# Find logs and tail
find . -name '<file pattern>' -print0 | sort -z | xargs -0 tail -f

# Find all git repos
fd '.git$' --prune -u -t d -x echo {//}

# Show memory
ps -caxm -orss= | awk '{ sum += $1 } END { print "Resident Set Size: " sum/1024 " MiB" }'

# Find a random TCP port
comm -23 <(seq 49000 65535 | sort) <(ss -tan | awk '{print $4}' | cut -d':' -f2 | grep '[0-9]{1,5}' | sort -u)| shuf | head -n 1

# Install elasticsearch-analysis-ik for Elasticsearch
elasticsearch-plugin install https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v<version>/elasticsearch-analysis-ik-<version>.zip

# https://unix.stackexchange.com/a/432383/28074
# Zip with progress bar
zip -r <target_zip> <folder_to_zip> 2>&1 |  pv -lep -s $(ls -Rl1 <folder_to_zip> | egrep -c '^[-/]') > /dev/null

# https://askubuntu.com/a/1092069/108909
# https://askubuntu.com/questions/909918/q-how-to-show-unzip-progress
# Unzip lots of small files
unzip <zip_file> | pv -l -s $(unzip -Z -1 <zip_file> | wc -l) > /dev/null

# Unzip large files
for f in $(unzip -Z -1 <zip_file>);
do
    mkdir -p $(dirname $f)
    unzip -p <zip_file> $f \
    | pv -s $(unzip -Z <zip_file> $f | awk '{print $4}') \
    > $f
done

# Find binary executables recursively
find -type f -executable -exec sh -c "file '{}' | grep -q '<executable_info>'" \; -print

# Fix Kitty terminal issue
infocmp -a xterm-kitty | ssh <server_info> tic -x -o \~/.terminfo /dev/stdin

$ executable_info: echo 'executable x86_64'
